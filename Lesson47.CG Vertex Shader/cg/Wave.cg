struct appdata
{
    float4 position : POSITION;
    float4 color    : COLOR0;
    float3 wave : COLOR1;
};

struct vfconn
{
    float4 HPos : POSITION;
    float4 Col0 : COLOR0;
};

vfconn main(appdata IN, uniform float4x4 ModelViewProj)
{
    vfconn OUT;      // Variable to handle our output from the vertex
    // Shader (goes to a fragment dhader if available)
    // Change the Y position of the vertex based on sine waves
    IN.position.y = ( sin(IN.wave.x + (IN.position.z / 4.0) ) + sin(IN.wave.x +         (IN.position.x / 5.0) ) ) * 2.5f;
    // Transform the vertex position into homogenous clip-space (required)
    OUT.HPos = mul(ModelViewProj, IN.position);
 
    // Set the color to the value specified in IN.color
    OUT.Col0.xyz = IN.color.xyz;
 
    return OUT;
}